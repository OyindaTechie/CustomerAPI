

CREATE COMPUTE MODULE putTransferCash_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		DECLARE query, query1,query2, recipient_accountnumber, sender_accountnumber,recipient_bank,sender_bank char;
		DECLARE transferredamount, newbalance, recipient_newbalance integer;
		
		
		SET sender_accountnumber = InputRoot.JSON.Data.sender_accountnumber;
		SET recipient_accountnumber = InputRoot.JSON.Data.recipient_accountnumber;
		SET transferredamount = InputRoot.JSON.Data.transferredamount;
		SET recipient_bank = InputRoot.JSON.Data.recipient_bank;
		SET sender_bank = InputRoot.JSON.Data.sender_bank;
		
		IF sender_bank = 'FCMB' AND recipient_bank = 'FCMB' THEN
			SET query1 = 'SELECT * FROM FCMB where accountnumber = ?';
		SET Environment.results[] = PASSTHRU(query1 VALUES(sender_accountnumber));
			IF Environment.results.balance < 1050 OR transferredamount > Environment.results.balance THEN
				SET OutputRoot.JSON.Data.Error = 'Insufficient Balance';
				SET OutputRoot.JSON.Data.Error_Code = 05;
		ELSE
		
		SET newbalance = Environment.results.balance - transferredamount;
		 
		PASSTHRU('UPDATE FCMB SET balance = ? WHERE accountnumber = ?', newbalance, sender_accountnumber);
		
		SET query2 = 'SELECT * FROM FCMB where accountnumber = ?';
		SET Environment.result[] = PASSTHRU(query2 VALUES(recipient_accountnumber));
		SET recipient_newbalance = Environment.result.balance + transferredamount;
		PASSTHRU('UPDATE FCMB SET balance = ? WHERE accountnumber = ?', recipient_newbalance, recipient_accountnumber);
		
		SET OutputRoot.JSON.Data.STATUS = 'TRANSFER SUCCESSFUL';
		END IF;
		
		ELSEIF sender_bank = 'GTB' AND recipient_bank = 'GTB' THEN
			SET query1 = 'SELECT * FROM GTB where accountnumber = ?';
		SET Environment.results[] = PASSTHRU(query1 VALUES(sender_accountnumber));
			IF Environment.results.balance < 1050 OR transferredamount > Environment.results.balance THEN
				SET OutputRoot.JSON.Data.Error = 'Insufficient Balance';
				SET OutputRoot.JSON.Data.Error_Code = 05;
			ELSE
		
		SET newbalance = Environment.results.balance - transferredamount;
		 
		PASSTHRU('UPDATE GTB SET balance = ? WHERE accountnumber = ?', newbalance, sender_accountnumber);
		
		SET query2 = 'SELECT * FROM GTB where accountnumber = ?';
		SET Environment.result[] = PASSTHRU(query2 VALUES(recipient_accountnumber));
		SET recipient_newbalance = Environment.result.balance + transferredamount;
		PASSTHRU('UPDATE GTB SET balance = ? WHERE accountnumber = ?', recipient_newbalance, recipient_accountnumber);
		
		SET OutputRoot.JSON.Data.STATUS = 'TRANSFER SUCCESSFUL';
		END IF;
		
		ELSEIF sender_bank = 'FCMB' AND recipient_bank = 'GTB' THEN
			SET query1 = 'SELECT * FROM FCMB where accountnumber = ?';
		SET Environment.results[] = PASSTHRU(query1 VALUES(sender_accountnumber));
			IF Environment.results.balance < 1050 OR transferredamount > Environment.results.balance THEN
				SET OutputRoot.JSON.Data.Error = 'Insufficient Balance';
				SET OutputRoot.JSON.Data.Error_Code = 05;
		ELSE
		
		SET newbalance = Environment.results.balance - transferredamount;
		 
		PASSTHRU('UPDATE FCMB SET balance = ? WHERE accountnumber = ?', newbalance, sender_accountnumber);
		
		SET query2 = 'SELECT * FROM GTB where accountnumber = ?';
		SET Environment.result[] = PASSTHRU(query2 VALUES(recipient_accountnumber));
		SET recipient_newbalance = Environment.result.balance + transferredamount;
		PASSTHRU('UPDATE GTB SET balance = ? WHERE accountnumber = ?', recipient_newbalance, recipient_accountnumber);
		
		SET OutputRoot.JSON.Data.STATUS = 'TRANSFER SUCCESSFUL';
		END IF;
		
		ELSEIF sender_bank = 'GTB' AND recipient_bank = 'FCMB' THEN
			SET query1 = 'SELECT * FROM GTB where accountnumber = ?';
		SET Environment.results[] = PASSTHRU(query1 VALUES(sender_accountnumber));
		
			IF Environment.results.balance < 1050 OR transferredamount > Environment.results.balance THEN
				SET OutputRoot.JSON.Data.Error = 'Insufficient Balance';
				SET OutputRoot.JSON.Data.Error_Code = 05;
			ELSE
		
		SET newbalance = Environment.results.balance - transferredamount;
		
				
		PASSTHRU('UPDATE GTB SET balance = ? WHERE accountnumber = ?', newbalance, sender_accountnumber);
		
		SET query2 = 'SELECT * FROM FCMB where accountnumber = ?';
		SET Environment.result[] = PASSTHRU(query2 VALUES(recipient_accountnumber));
		--IF EXISTS(Environment.result[]) THEN
		SET recipient_newbalance = Environment.result.balance + transferredamount;
		PASSTHRU('UPDATE FCMB SET balance = ? WHERE accountnumber = ?', recipient_newbalance, recipient_accountnumber);
		
		SET OutputRoot.JSON.Data.STATUS = 'TRANSFER SUCCESSFUL';
				
		END IF;
		
		ELSE
			SET OutputRoot.JSON.Data.Error = 'Invalid Sender bank or recipient bank';
		
		END IF;
		
		/*SET query1 = 'SELECT * FROM customerdetails where accountnumber = ?';
		SET Environment.results[] = PASSTHRU(query1 VALUES(sender_accountnumber));
		
		
		SET newbalance = Environment.results.balance - transferredamount;
		 
		PASSTHRU('UPDATE customerdetails SET balance = ? WHERE accountnumber = ?', newbalance, sender_accountnumber);
		
		SET query2 = 'SELECT * FROM recipient_customerdetails where accountnumber = ?';
		SET Environment.result[] = PASSTHRU(query2 VALUES(recipient_accountnumber));
		SET recipient_newbalance = Environment.result.balance + transferredamount;
		PASSTHRU('UPDATE recipient_customerdetails SET balance = ? WHERE accountnumber = ?', recipient_newbalance, recipient_accountnumber);
		
		SET OutputRoot.JSON.Data.STATUS = 'TRANSFER SUCCESSFUL';
		*/
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
