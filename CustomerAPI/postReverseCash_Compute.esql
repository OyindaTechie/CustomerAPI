

CREATE COMPUTE MODULE postReverseCash_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		DECLARE query, query1,query2, debitaccountnumber, creditaccountnumber, recipient_accountnumber, sender_accountnumber,recipient_bank,sender_bank char;
		DECLARE transferredamount, newbalance, recipient_newbalance, amount Decimal;
		
		
		SET debitaccountnumber = InputRoot.JSON.Data.debitaccountnumber;
		SET creditaccountnumber = InputRoot.JSON.Data.creditaccountnumber;
		SET amount = InputRoot.JSON.Data.amount;
	
		
		SET query1 = 'SELECT * FROM FCMB where accountnumber = ?';
		SET Environment.results[] = PASSTHRU(query1 VALUES(debitaccountnumber));
			IF Environment.results.accountbalance < 1050 OR amount > Environment.results.accountbalance THEN
				SET OutputRoot.JSON.Data.status = False;
		 		SET OutputRoot.JSON.Data.status_Message = 'Insufficient Balance';
		 		SET OutputRoot.JSON.Data.status_code = '05';
		ELSE
		
		SET newbalance = Environment.results.accountbalance + amount;
		 
		PASSTHRU('UPDATE FCMB SET accountbalance = ? WHERE accountnumber = ?', newbalance, debitaccountnumber);
		
		SET query2 = 'SELECT * FROM FCMB where accountnumber = ?';
		SET Environment.result[] = PASSTHRU(query2 VALUES(creditaccountnumber));
		SET recipient_newbalance = Environment.result.accountbalance - amount;
		PASSTHRU('UPDATE FCMB SET accountbalance = ? WHERE accountnumber = ?', recipient_newbalance, creditaccountnumber);
		
				SET OutputRoot.JSON.Data.status = True;
		 		SET OutputRoot.JSON.Data.status_Message = 'Reverse Successful';
		 		SET OutputRoot.JSON.Data.status_code = '01';
		END IF;
		

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
